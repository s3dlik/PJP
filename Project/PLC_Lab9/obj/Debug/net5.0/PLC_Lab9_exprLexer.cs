//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\git\PJP\Project\PLC_Lab9\PLC_Lab9_expr.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PLC_Lab9 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PLC_Lab9_exprLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, BOOL=33, INT=34, FLOAT=35, STRING=36, NULL=37, IDENTIFIER=38, 
		WS=39;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "BOOL", 
		"INT", "FLOAT", "STRING", "NULL", "IDENTIFIER", "WS"
	};


	public PLC_Lab9_exprLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "','", "'='", "'write'", "'read'", "'if'", "'expression'", 
		"'else'", "'while('", "')'", "'{'", "'}'", "'*'", "'/'", "'%'", "'+'", 
		"'-'", "'.'", "'('", "'>'", "'<'", "'=='", "'!='", "'||'", "'&&'", "'int'", 
		"'string'", "'float'", "'bool'", "'//'", "'\r'", "'\n'", null, null, null, 
		null, "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "BOOL", "INT", "FLOAT", 
		"STRING", "NULL", "IDENTIFIER", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PLC_Lab9_expr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2)\x100\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x3\x2\x3\x2\x3"+
		"\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
		"\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
		"\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3"+
		"\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3"+
		"\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3"+
		"\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3"+
		" \x3 \x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"\xC7\n"+
		"\"\x3#\x5#\xCA\n#\x3#\a#\xCD\n#\f#\xE#\xD0\v#\x3#\x6#\xD3\n#\r#\xE#\xD4"+
		"\x3$\x5$\xD8\n$\x3$\x6$\xDB\n$\r$\xE$\xDC\x3$\x3$\x6$\xE1\n$\r$\xE$\xE2"+
		"\x3%\x3%\a%\xE7\n%\f%\xE%\xEA\v%\x3%\x3%\x3&\x3&\x3&\x3&\x3&\x3\'\x3\'"+
		"\a\'\xF5\n\'\f\'\xE\'\xF8\v\'\x3(\x6(\xFB\n(\r(\xE(\xFC\x3(\x3(\x2\x2"+
		"\x2)\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n"+
		"\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11"+
		"!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31"+
		"\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!"+
		"\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)\x3\x2\b\x3\x2\x33"+
		";\x3\x2\x32;\x3\x2$$\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61"+
		"\x63|\x5\x2\v\f\xF\xF\"\"\x109\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x3Q\x3\x2\x2\x2\x5S\x3\x2\x2\x2\aU\x3\x2\x2\x2\tW\x3\x2"+
		"\x2\x2\v]\x3\x2\x2\x2\r\x62\x3\x2\x2\x2\xF\x65\x3\x2\x2\x2\x11p\x3\x2"+
		"\x2\x2\x13u\x3\x2\x2\x2\x15|\x3\x2\x2\x2\x17~\x3\x2\x2\x2\x19\x80\x3\x2"+
		"\x2\x2\x1B\x82\x3\x2\x2\x2\x1D\x84\x3\x2\x2\x2\x1F\x86\x3\x2\x2\x2!\x88"+
		"\x3\x2\x2\x2#\x8A\x3\x2\x2\x2%\x8C\x3\x2\x2\x2\'\x8E\x3\x2\x2\x2)\x90"+
		"\x3\x2\x2\x2+\x92\x3\x2\x2\x2-\x94\x3\x2\x2\x2/\x97\x3\x2\x2\x2\x31\x9A"+
		"\x3\x2\x2\x2\x33\x9D\x3\x2\x2\x2\x35\xA0\x3\x2\x2\x2\x37\xA4\x3\x2\x2"+
		"\x2\x39\xAB\x3\x2\x2\x2;\xB1\x3\x2\x2\x2=\xB6\x3\x2\x2\x2?\xB9\x3\x2\x2"+
		"\x2\x41\xBB\x3\x2\x2\x2\x43\xC6\x3\x2\x2\x2\x45\xC9\x3\x2\x2\x2G\xD7\x3"+
		"\x2\x2\x2I\xE4\x3\x2\x2\x2K\xED\x3\x2\x2\x2M\xF2\x3\x2\x2\x2O\xFA\x3\x2"+
		"\x2\x2QR\a=\x2\x2R\x4\x3\x2\x2\x2ST\a.\x2\x2T\x6\x3\x2\x2\x2UV\a?\x2\x2"+
		"V\b\x3\x2\x2\x2WX\ay\x2\x2XY\at\x2\x2YZ\ak\x2\x2Z[\av\x2\x2[\\\ag\x2\x2"+
		"\\\n\x3\x2\x2\x2]^\at\x2\x2^_\ag\x2\x2_`\a\x63\x2\x2`\x61\a\x66\x2\x2"+
		"\x61\f\x3\x2\x2\x2\x62\x63\ak\x2\x2\x63\x64\ah\x2\x2\x64\xE\x3\x2\x2\x2"+
		"\x65\x66\ag\x2\x2\x66g\az\x2\x2gh\ar\x2\x2hi\at\x2\x2ij\ag\x2\x2jk\au"+
		"\x2\x2kl\au\x2\x2lm\ak\x2\x2mn\aq\x2\x2no\ap\x2\x2o\x10\x3\x2\x2\x2pq"+
		"\ag\x2\x2qr\an\x2\x2rs\au\x2\x2st\ag\x2\x2t\x12\x3\x2\x2\x2uv\ay\x2\x2"+
		"vw\aj\x2\x2wx\ak\x2\x2xy\an\x2\x2yz\ag\x2\x2z{\a*\x2\x2{\x14\x3\x2\x2"+
		"\x2|}\a+\x2\x2}\x16\x3\x2\x2\x2~\x7F\a}\x2\x2\x7F\x18\x3\x2\x2\x2\x80"+
		"\x81\a\x7F\x2\x2\x81\x1A\x3\x2\x2\x2\x82\x83\a,\x2\x2\x83\x1C\x3\x2\x2"+
		"\x2\x84\x85\a\x31\x2\x2\x85\x1E\x3\x2\x2\x2\x86\x87\a\'\x2\x2\x87 \x3"+
		"\x2\x2\x2\x88\x89\a-\x2\x2\x89\"\x3\x2\x2\x2\x8A\x8B\a/\x2\x2\x8B$\x3"+
		"\x2\x2\x2\x8C\x8D\a\x30\x2\x2\x8D&\x3\x2\x2\x2\x8E\x8F\a*\x2\x2\x8F(\x3"+
		"\x2\x2\x2\x90\x91\a@\x2\x2\x91*\x3\x2\x2\x2\x92\x93\a>\x2\x2\x93,\x3\x2"+
		"\x2\x2\x94\x95\a?\x2\x2\x95\x96\a?\x2\x2\x96.\x3\x2\x2\x2\x97\x98\a#\x2"+
		"\x2\x98\x99\a?\x2\x2\x99\x30\x3\x2\x2\x2\x9A\x9B\a~\x2\x2\x9B\x9C\a~\x2"+
		"\x2\x9C\x32\x3\x2\x2\x2\x9D\x9E\a(\x2\x2\x9E\x9F\a(\x2\x2\x9F\x34\x3\x2"+
		"\x2\x2\xA0\xA1\ak\x2\x2\xA1\xA2\ap\x2\x2\xA2\xA3\av\x2\x2\xA3\x36\x3\x2"+
		"\x2\x2\xA4\xA5\au\x2\x2\xA5\xA6\av\x2\x2\xA6\xA7\at\x2\x2\xA7\xA8\ak\x2"+
		"\x2\xA8\xA9\ap\x2\x2\xA9\xAA\ai\x2\x2\xAA\x38\x3\x2\x2\x2\xAB\xAC\ah\x2"+
		"\x2\xAC\xAD\an\x2\x2\xAD\xAE\aq\x2\x2\xAE\xAF\a\x63\x2\x2\xAF\xB0\av\x2"+
		"\x2\xB0:\x3\x2\x2\x2\xB1\xB2\a\x64\x2\x2\xB2\xB3\aq\x2\x2\xB3\xB4\aq\x2"+
		"\x2\xB4\xB5\an\x2\x2\xB5<\x3\x2\x2\x2\xB6\xB7\a\x31\x2\x2\xB7\xB8\a\x31"+
		"\x2\x2\xB8>\x3\x2\x2\x2\xB9\xBA\a\xF\x2\x2\xBA@\x3\x2\x2\x2\xBB\xBC\a"+
		"\f\x2\x2\xBC\x42\x3\x2\x2\x2\xBD\xBE\av\x2\x2\xBE\xBF\at\x2\x2\xBF\xC0"+
		"\aw\x2\x2\xC0\xC7\ag\x2\x2\xC1\xC2\ah\x2\x2\xC2\xC3\a\x63\x2\x2\xC3\xC4"+
		"\an\x2\x2\xC4\xC5\au\x2\x2\xC5\xC7\ag\x2\x2\xC6\xBD\x3\x2\x2\x2\xC6\xC1"+
		"\x3\x2\x2\x2\xC7\x44\x3\x2\x2\x2\xC8\xCA\a/\x2\x2\xC9\xC8\x3\x2\x2\x2"+
		"\xC9\xCA\x3\x2\x2\x2\xCA\xCE\x3\x2\x2\x2\xCB\xCD\t\x2\x2\x2\xCC\xCB\x3"+
		"\x2\x2\x2\xCD\xD0\x3\x2\x2\x2\xCE\xCC\x3\x2\x2\x2\xCE\xCF\x3\x2\x2\x2"+
		"\xCF\xD2\x3\x2\x2\x2\xD0\xCE\x3\x2\x2\x2\xD1\xD3\t\x3\x2\x2\xD2\xD1\x3"+
		"\x2\x2\x2\xD3\xD4\x3\x2\x2\x2\xD4\xD2\x3\x2\x2\x2\xD4\xD5\x3\x2\x2\x2"+
		"\xD5\x46\x3\x2\x2\x2\xD6\xD8\a/\x2\x2\xD7\xD6\x3\x2\x2\x2\xD7\xD8\x3\x2"+
		"\x2\x2\xD8\xDA\x3\x2\x2\x2\xD9\xDB\t\x3\x2\x2\xDA\xD9\x3\x2\x2\x2\xDB"+
		"\xDC\x3\x2\x2\x2\xDC\xDA\x3\x2\x2\x2\xDC\xDD\x3\x2\x2\x2\xDD\xDE\x3\x2"+
		"\x2\x2\xDE\xE0\a\x30\x2\x2\xDF\xE1\t\x3\x2\x2\xE0\xDF\x3\x2\x2\x2\xE1"+
		"\xE2\x3\x2\x2\x2\xE2\xE0\x3\x2\x2\x2\xE2\xE3\x3\x2\x2\x2\xE3H\x3\x2\x2"+
		"\x2\xE4\xE8\a$\x2\x2\xE5\xE7\n\x4\x2\x2\xE6\xE5\x3\x2\x2\x2\xE7\xEA\x3"+
		"\x2\x2\x2\xE8\xE6\x3\x2\x2\x2\xE8\xE9\x3\x2\x2\x2\xE9\xEB\x3\x2\x2\x2"+
		"\xEA\xE8\x3\x2\x2\x2\xEB\xEC\a$\x2\x2\xECJ\x3\x2\x2\x2\xED\xEE\ap\x2\x2"+
		"\xEE\xEF\aw\x2\x2\xEF\xF0\an\x2\x2\xF0\xF1\an\x2\x2\xF1L\x3\x2\x2\x2\xF2"+
		"\xF6\t\x5\x2\x2\xF3\xF5\t\x6\x2\x2\xF4\xF3\x3\x2\x2\x2\xF5\xF8\x3\x2\x2"+
		"\x2\xF6\xF4\x3\x2\x2\x2\xF6\xF7\x3\x2\x2\x2\xF7N\x3\x2\x2\x2\xF8\xF6\x3"+
		"\x2\x2\x2\xF9\xFB\t\a\x2\x2\xFA\xF9\x3\x2\x2\x2\xFB\xFC\x3\x2\x2\x2\xFC"+
		"\xFA\x3\x2\x2\x2\xFC\xFD\x3\x2\x2\x2\xFD\xFE\x3\x2\x2\x2\xFE\xFF\b(\x2"+
		"\x2\xFFP\x3\x2\x2\x2\r\x2\xC6\xC9\xCE\xD4\xD7\xDC\xE2\xE8\xF6\xFC\x3\b"+
		"\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace PLC_Lab9
